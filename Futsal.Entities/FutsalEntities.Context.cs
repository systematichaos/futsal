//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Futsal.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FutsalEntities : DbContext
    {
        public FutsalEntities()
            : base("name=FutsalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ApplicationLog> ApplicationLogs { get; set; }
        public virtual DbSet<Application> Applications { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserRole> AspNetUserRoles { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<UserHistory> UserHistories { get; set; }
        public virtual DbSet<UserLoginAttempt> UserLoginAttempts { get; set; }
    
        public virtual int UserRole_Assign(Nullable<int> userId, string roleName, Nullable<int> loggedInUserId, ObjectParameter result)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var loggedInUserIdParameter = loggedInUserId.HasValue ?
                new ObjectParameter("LoggedInUserId", loggedInUserId) :
                new ObjectParameter("LoggedInUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserRole_Assign", userIdParameter, roleNameParameter, loggedInUserIdParameter, result);
        }
    
        public virtual ObjectResult<UserRoles_Search_Result> UserRoles_Search(Nullable<int> id, string name, string assignedByUser, string assignedDate, Nullable<int> pageNumber, Nullable<int> pageSize, string orderBy)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var assignedByUserParameter = assignedByUser != null ?
                new ObjectParameter("AssignedByUser", assignedByUser) :
                new ObjectParameter("AssignedByUser", typeof(string));
    
            var assignedDateParameter = assignedDate != null ?
                new ObjectParameter("AssignedDate", assignedDate) :
                new ObjectParameter("AssignedDate", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserRoles_Search_Result>("UserRoles_Search", idParameter, nameParameter, assignedByUserParameter, assignedDateParameter, pageNumberParameter, pageSizeParameter, orderByParameter);
        }
    }
}
